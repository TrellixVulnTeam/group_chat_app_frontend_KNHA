{"ast":null,"code":"import _slicedToArray from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{Fragment,useState,useEffect}from'react';import{gql,useLazyQuery,useMutation}from'@apollo/client';import{useAuthDispatch,useAuthState}from'../context/auth';import{useMessageState,useMessageDispatch}from'../context/message';import{Row,Col,Button,Card}from'react-bootstrap';import classNames from'classnames';import moment from'moment';import{Chatroom}from'./Chatroom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GET_GROUP_COUNT=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query getGroupCount{\\n    getGroupCount\\n  }\\n\"])));var GET_GROUPS=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation getGroups($page: Int!){\\n    getGroups(page: $page){\\n      groupname groupdesc createdAt\\n    }\\n  }\\n\"])));export var Home=function Home(){var _groups$find;var authDispatch=useAuthDispatch();// const { user } = useAuthState()\nvar dispatch=useMessageDispatch();var _useMessageState=useMessageState(),groups=_useMessageState.groups;var selectedGroup=groups===null||groups===void 0?void 0:(_groups$find=groups.find(function(group){return group.selected===true;}))===null||_groups$find===void 0?void 0:_groups$find.groupname;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),totalGroups=_useState6[0],setTotalGroups=_useState6[1];// const [totalPages, setTotalPages] = useState([])\nvar pageNumbers=[];// const [groups, setGroups] = useState([])\n// const [getGroups, { loading, data, error }] = useLazyQuery(GET_GROUPS)\n// const { loading } = useMutation(GET_GROUPS, {\n//   onCompleted: (data) => dispatch({ type: 'SET_GROUPS', payload: data.getGroups }),\n//   onError: (err) => console.log('error in query: ', err)\n// })\nvar _useLazyQuery=useLazyQuery(GET_GROUP_COUNT,{onError:function onError(err){return console.log('errrrrr',err);},onCompleted:function onCompleted(data){console.log('count: ',data);setTotalGroups(data.getGroupCount);}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),getGroupCount=_useLazyQuery2[0];var _useMutation=useMutation(GET_GROUPS,{onError:function onError(err){return console.log(err);},onCompleted:function onCompleted(data){return dispatch({type:'SET_GROUPS',payload:data.getGroups});}}),_useMutation2=_slicedToArray(_useMutation,2),getGroups=_useMutation2[0],loading=_useMutation2[1].loading;if(totalGroups>0){for(var i=1;i<=Math.ceil(totalGroups/3);i++){pageNumbers.push(i);}}useEffect(function(){getGroupCount();console.log('total groups: ',totalGroups);getGroups({variables:{page:currentPage}});},[currentPage,totalGroups,getGroupCount,getGroups]);var groupsMarkup;if(!groups||loading){groupsMarkup=/*#__PURE__*/_jsx(\"p\",{children:\"loading..\"});}else if(groups.length===0){groupsMarkup=/*#__PURE__*/_jsx(\"p\",{children:\"no groups created yet\"});}else if(groups.length>0){groupsMarkup=groups.map(function(group){var selected=selectedGroup===group.groupname;return/*#__PURE__*/_jsx(Col,{sm:12,md:6,lg:4,className:\"my-2 mx-auto\",children:/*#__PURE__*/_jsxs(Card,{className:\"text-center pt-1\",children:[/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{className:\"text-uppercase\",children:group.groupname}),/*#__PURE__*/_jsx(Card.Text,{className:\"text-capitalize\",children:group.groupdesc}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:classNames(\"mb-3\",{'btn-warning':selected}),onClick:function onClick(){dispatch({type:'SET_SELECTED_GROUP',payload:group.groupname});setClicked(true);},children:\"Enter group\"})]}),/*#__PURE__*/_jsxs(Card.Footer,{className:\"text-muted\",children:[\"Created: \",moment(group.createdAt).format('MMM DD, YYYY @ h:mm a')]})]})},group.groupname);});}var logout=function logout(){authDispatch({type:'LOGOUT'});window.location.href='/login';};var paginate=function paginate(pageNumber){console.log('selected page number: ',pageNumber);setCurrentPage(pageNumber);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Row,{className:\"justify-content-end mx-auto mb-3\",children:/*#__PURE__*/_jsx(Col,{className:\"text-end\",children:/*#__PURE__*/_jsx(Button,{variant:\"link\",className:\"btn-light text-decoration-none\",onClick:logout,children:\"Logout\"})})}),/*#__PURE__*/_jsx(Row,{children:clicked===false?groupsMarkup:/*#__PURE__*/_jsx(Chatroom,{})}),/*#__PURE__*/_jsx(\"nav\",{children:clicked===false?/*#__PURE__*/_jsx(\"ul\",{className:\"pagination justify-content-end\",children:pageNumbers.map(function(page){return/*#__PURE__*/_jsx(\"li\",{className:\"page-item\",children:/*#__PURE__*/_jsx(Button,{variant:\"link\",className:\"page-link\",onClick:function onClick(){return paginate(page);},children:page})},page);})}):''})]});};","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Home.js"],"names":["React","Fragment","useState","useEffect","gql","useLazyQuery","useMutation","useAuthDispatch","useAuthState","useMessageState","useMessageDispatch","Row","Col","Button","Card","classNames","moment","Chatroom","GET_GROUP_COUNT","GET_GROUPS","Home","authDispatch","dispatch","groups","selectedGroup","find","group","selected","groupname","clicked","setClicked","currentPage","setCurrentPage","totalGroups","setTotalGroups","pageNumbers","onError","err","console","log","onCompleted","data","getGroupCount","type","payload","getGroups","loading","i","Math","ceil","push","variables","page","groupsMarkup","length","map","groupdesc","createdAt","format","logout","window","location","href","paginate","pageNumber"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport { gql, useLazyQuery, useMutation } from '@apollo/client'\nimport { useAuthDispatch, useAuthState } from '../context/auth'\nimport { useMessageState, useMessageDispatch } from '../context/message'\nimport { Row, Col, Button, Card } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport moment from 'moment'\nimport { Chatroom } from './Chatroom'\n\nconst GET_GROUP_COUNT = gql`\n  query getGroupCount{\n    getGroupCount\n  }\n`\n\nconst GET_GROUPS = gql`\n  mutation getGroups($page: Int!){\n    getGroups(page: $page){\n      groupname groupdesc createdAt\n    }\n  }\n`\nexport const Home = () => {\n  const authDispatch = useAuthDispatch()\n  // const { user } = useAuthState()\n  const dispatch = useMessageDispatch()\n  const { groups } = useMessageState()\n  const selectedGroup = groups?.find(group => group.selected === true)?.groupname\n  const [clicked, setClicked] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalGroups, setTotalGroups] = useState(0)\n  // const [totalPages, setTotalPages] = useState([])\n  let pageNumbers = []\n  // const [groups, setGroups] = useState([])\n\n  // const [getGroups, { loading, data, error }] = useLazyQuery(GET_GROUPS)\n  // const { loading } = useMutation(GET_GROUPS, {\n  //   onCompleted: (data) => dispatch({ type: 'SET_GROUPS', payload: data.getGroups }),\n  //   onError: (err) => console.log('error in query: ', err)\n  // })\n\n  const [getGroupCount] = useLazyQuery(GET_GROUP_COUNT, {\n    onError: (err) => console.log('errrrrr', err),\n    onCompleted: (data) => {\n      console.log('count: ', data)\n      setTotalGroups(data.getGroupCount)\n    }\n  })\n\n  \n\n  const [getGroups, { loading }] = useMutation(GET_GROUPS, {\n    onError: (err) => console.log(err),\n    onCompleted: (data) => dispatch({ type: 'SET_GROUPS', payload: data.getGroups })\n  })\n\n  if (totalGroups > 0) {\n    for (let i = 1; i <= Math.ceil(totalGroups / 3); i++){\n      pageNumbers.push(i)\n    }\n  }\n  \n  \n  useEffect(() => {\n    getGroupCount()\n    console.log('total groups: ', totalGroups)\n    getGroups({\n      variables: {\n        page: currentPage\n      }\n    })\n  }, [currentPage, totalGroups, getGroupCount, getGroups])\n\n  let groupsMarkup\n  if (!groups || loading) {\n    groupsMarkup = <p>loading..</p>\n  } else if (groups.length === 0) {\n    groupsMarkup = <p>no groups created yet</p>\n  } else if (groups.length > 0) {\n    groupsMarkup = groups.map(group => {\n      const selected = selectedGroup === group.groupname\n      return (\n        <Col sm={12} md={6} lg={4} className=\"my-2 mx-auto\" key={group.groupname}>\n        <Card className=\"text-center pt-1\">\n          {/* <Card.Header>Featured</Card.Header> */}\n          <Card.Body>\n            <Card.Title className=\"text-uppercase\">\n              {group.groupname}\n              {/* title */}\n            </Card.Title>\n            <Card.Text className=\"text-capitalize\">\n              {group.groupdesc}\n              {/* text */}\n            </Card.Text>\n            <Button variant=\"primary\"\n              className={classNames(\"mb-3\",{ 'btn-warning': selected })}\n                onClick={() => {\n                  dispatch({ type: 'SET_SELECTED_GROUP', payload: group.groupname })\n                  setClicked(true)\n                  }\n                }>\n                Enter group\n              </Button>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\">\n            Created: {moment(group.createdAt).format('MMM DD, YYYY @ h:mm a')}\n            {/* footer */}\n          </Card.Footer>\n        </Card></Col>\n      )\n    })\n  }\n  \n  const logout = () => {\n    authDispatch({ type: 'LOGOUT' })\n    window.location.href = '/login'\n  }\n\n  const paginate = (pageNumber) => {\n    console.log('selected page number: ', pageNumber)\n    setCurrentPage(pageNumber)\n  }\n  return (\n    <Fragment>\n      <Row className=\"justify-content-end mx-auto mb-3\">\n        <Col className=\"text-end\">\n          <Button variant=\"link\" className=\"btn-light text-decoration-none\"\n            onClick={logout}>Logout</Button>\n        </Col>\n      </Row>\n      <Row>\n        {clicked === false ? groupsMarkup : <Chatroom />}\n      </Row>\n      \n      <nav>\n        {clicked === false ? (\n          <ul className=\"pagination justify-content-end\">\n        {pageNumbers.map(page => (\n          <li className=\"page-item\" key={page}>\n            {/* <a onClick={() => paginate(page)} href=\"#\" className=\"page-link\">{page}</a> */}\n            <Button variant=\"link\" className=\"page-link\" onClick={() => paginate(page)}>\n              {page}\n            </Button>\n          </li>\n        ))}\n      </ul>\n        ) : ''}\n      </nav>\n      \n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}