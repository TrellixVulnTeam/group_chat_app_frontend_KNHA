{"ast":null,"code":"import _slicedToArray from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,Fragment,useState}from'react';import{Col,Form,Button}from'react-bootstrap';import{gql,useLazyQuery,useMutation,useSubscription}from'@apollo/client';import{useMessageDispatch,useMessageState}from'../context/message';import Message from'./Message';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GET_MESSAGES=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query getMessages($to: String!){\\n    getMessages(to: $to){\\n      content from to createdAt\\n    }\\n  }\\n\"])));var SEND_MESSAGE=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation sendMessage($to: String! $content: String!){\\n    sendMessage(to: $to content: $content){\\n      id content from to createdAt\\n    }\\n  }\\n\"])));var NEW_MESSAGE=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  subscription newMessage {\\n    newMessage{\\n      id from content to createdAt\\n    }\\n  }\\n\"])));export var Chatroom=function Chatroom(){// const { user } = useAuthState()\nvar _useMessageState=useMessageState(),groups=_useMessageState.groups;var dispatch=useMessageDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var selectedGroup=groups===null||groups===void 0?void 0:groups.find(function(group){return group.selected===true;});// console.log('selected group : ', selectedGroup)\nvar messages=selectedGroup===null||selectedGroup===void 0?void 0:selectedGroup.messages;// console.log('messages: ', messages)\nvar _useSubscription=useSubscription(NEW_MESSAGE),messageData=_useSubscription.data,messageError=_useSubscription.error;var _useLazyQuery=useLazyQuery(GET_MESSAGES),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),getMessages=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],messagesLoading=_useLazyQuery2$.loading,messagesData=_useLazyQuery2$.data;var _useMutation=useMutation(SEND_MESSAGE,{onError:function onError(err){return console.log(err);}}),_useMutation2=_slicedToArray(_useMutation,1),sendMessage=_useMutation2[0];useEffect(function(){if(messageError)console.log(messageError);if(messageData){var message=messageData.newMessage;dispatch({type:'ADD_MESSAGE',payload:{groupname:message.to,message:message}});}},[messageError,messageData]);useEffect(function(){if(selectedGroup&&!selectedGroup.messages){getMessages({variables:{to:selectedGroup.groupname}});}},[selectedGroup]);useEffect(function(){if(messagesData){console.log('messages Data : ',messagesData);dispatch({type:'SET_GROUP_MESSAGES',payload:{groupname:selectedGroup.groupname,messages:messagesData.getMessages}});}},[messagesData]);var submitMessage=function submitMessage(e){e.preventDefault();if(content.trim()===''||!selectedGroup)return;console.log('send message: ',content);setContent('');//mutation for sending a message\nsendMessage({variables:{to:selectedGroup.groupname,content:content}});};var selectedChatMarkup;if(!messages&&!messagesLoading){selectedChatMarkup=/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"Select a friend\"});}else if(messagesLoading){selectedChatMarkup=/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"loading...\"});}else if(messages.length>0){selectedChatMarkup=messages.map(function(message,index){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Message,{message:message}),index===messages.length-1&&/*#__PURE__*/_jsx(\"div\",{className:\"invisible\",children:/*#__PURE__*/_jsx(\"hr\",{className:\"m-0\"})})]},message.id);});}else if(messages.length===0){selectedChatMarkup=/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"You are now connected! send your first message\"});}var home=function home(){window.location.href='/';};return/*#__PURE__*/_jsxs(Col,{xs:10,md:8,className:\"chat-box p-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end m-3\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",className:\"leave-room\",onClick:home,children:\"Leave Room\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"messages-box d-flex flex-column-reverse my-3 p-3\",children:selectedChatMarkup}),/*#__PURE__*/_jsx(\"div\",{className:\"px-3 py-2 mb-3 mt-2\",children:/*#__PURE__*/_jsx(Form,{onSubmit:submitMessage,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"d-flex align-items-center m-0\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"message-input rounded-pill p-3 border-0\",placeholder:\"Type a message...\",value:content,onChange:function onChange(e){return setContent(e.target.value);}}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-paper-plane fa-2x text-primary ms-2\",role:\"button\",onClick:submitMessage})]})})})]});};","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Chatroom.js"],"names":["React","useEffect","Fragment","useState","Col","Form","Button","gql","useLazyQuery","useMutation","useSubscription","useMessageDispatch","useMessageState","Message","GET_MESSAGES","SEND_MESSAGE","NEW_MESSAGE","Chatroom","groups","dispatch","content","setContent","selectedGroup","find","group","selected","messages","messageData","data","messageError","error","getMessages","messagesLoading","loading","messagesData","onError","err","console","log","sendMessage","message","newMessage","type","payload","groupname","to","variables","submitMessage","e","preventDefault","trim","selectedChatMarkup","length","map","index","id","home","window","location","href","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react'\nimport { Col, Form, Button } from 'react-bootstrap'\nimport { gql, useLazyQuery, useMutation, useSubscription } from '@apollo/client'\nimport { useMessageDispatch, useMessageState } from '../context/message'\nimport Message from './Message'\n\nconst GET_MESSAGES = gql`\n  query getMessages($to: String!){\n    getMessages(to: $to){\n      content from to createdAt\n    }\n  }\n`\n\nconst SEND_MESSAGE = gql`\n  mutation sendMessage($to: String! $content: String!){\n    sendMessage(to: $to content: $content){\n      id content from to createdAt\n    }\n  }\n`\n\nconst NEW_MESSAGE = gql`\n  subscription newMessage {\n    newMessage{\n      id from content to createdAt\n    }\n  }\n`\nexport const Chatroom = () => {\n  // const { user } = useAuthState()\n  const { groups } = useMessageState()\n  const dispatch = useMessageDispatch()\n  const [content, setContent] = useState('')\n\n  const selectedGroup = groups?.find(group => group.selected === true)\n  // console.log('selected group : ', selectedGroup)\n  const messages = selectedGroup?.messages\n  // console.log('messages: ', messages)\n\n  const { data: messageData, error: messageError } = useSubscription(NEW_MESSAGE)\n\n  const [getMessages, { loading: messagesLoading, data: messagesData }] = useLazyQuery(GET_MESSAGES)\n\n  const [sendMessage] = useMutation(SEND_MESSAGE, {\n    onError: (err) => console.log(err),  \n  })\n\n  useEffect(() => {\n    if (messageError) console.log(messageError)\n    if (messageData) {\n      const message = messageData.newMessage\n      dispatch({\n        type: 'ADD_MESSAGE', payload: {\n          groupname: message.to,\n          message\n        }\n     })\n    }\n  }, [messageError, messageData])\n\n  useEffect(() => {\n    if (selectedGroup && !selectedGroup.messages) {\n      getMessages({ variables: { to: selectedGroup.groupname } })\n    }\n  }, [selectedGroup])\n\n  useEffect(() => {\n    if (messagesData) {\n      console.log('messages Data : ', messagesData)\n      dispatch({\n        type: 'SET_GROUP_MESSAGES', payload: {\n          groupname: selectedGroup.groupname,\n          messages: messagesData.getMessages\n      } })\n    }\n  },[messagesData])\n\n  const submitMessage = (e) => {\n    e.preventDefault()\n    if (content.trim() === '' || !selectedGroup) return\n    console.log('send message: ', content)\n    setContent('')\n    //mutation for sending a message\n    sendMessage({\n      variables: {\n        to: selectedGroup.groupname,\n        content\n    }})\n  }\n\n  let selectedChatMarkup\n  if (!messages && !messagesLoading) {\n    selectedChatMarkup = <p className=\"info-text\">Select a friend</p>\n  } else if (messagesLoading) {\n    selectedChatMarkup = <p className=\"info-text\">loading...</p>\n  } else if (messages.length > 0) {\n    selectedChatMarkup = messages.map((message, index) => (\n      <Fragment key={message.id}>\n        <Message message={message} />\n        {index === messages.length - 1 && (\n          <div className=\"invisible\">\n            <hr className=\"m-0\"/>\n          </div>\n        )}\n      </Fragment>\n    ))\n  } else if (messages.length === 0) {\n    selectedChatMarkup = <p className=\"info-text\">You are now connected! send your first message</p>\n  }\n\n  const home = () => {\n    window.location.href = '/'\n  }\n  return (\n    <Col xs={10} md={8} className=\"chat-box p-2\">\n      <div className=\"d-flex justify-content-end m-3\">\n        <Button variant=\"outline-danger\" className=\"leave-room\"\n          onClick={home}>Leave Room</Button>\n      </div>\n\n      <div className=\"messages-box d-flex flex-column-reverse my-3 p-3\">\n        {selectedChatMarkup}\n      </div>\n      \n      <div className=\"px-3 py-2 mb-3 mt-2\">\n        <Form onSubmit={submitMessage}>\n          <Form.Group className=\"d-flex align-items-center m-0\">\n            <Form.Control type=\"text\" className=\"message-input rounded-pill p-3 border-0\"\n              placeholder=\"Type a message...\" value={content}\n              onChange={(e) => setContent(e.target.value)} />\n            <i className=\"fas fa-paper-plane fa-2x text-primary ms-2\"\n              role=\"button\"\n              onClick={submitMessage}></i>\n          </Form.Group>\n        </Form>\n      </div>\n    </Col>\n  )\n}"]},"metadata":{},"sourceType":"module"}