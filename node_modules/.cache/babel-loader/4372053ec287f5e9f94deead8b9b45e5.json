{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { Row, Col, Form, Button, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n    ){\n      register(\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      ){\n        username\n        email\n        createdAt\n      }\n  }\n`;\nexport const Register = props => {\n  _s();\n\n  var _errors$email, _errors$username, _errors$password, _errors$confirmPasswo;\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [registerUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    // Handle error\n    onError: err => setErrors(err.graphQLErrors[0].extensions.errors),\n    // Redirect to login page when registered\n    update: () => props.history.push('/login')\n  });\n\n  const submitRegistrationForm = event => {\n    event.preventDefault();\n    registerUser({\n      credentials\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitRegistrationForm,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Email address\",\n            className: errors.email && 'is-invalid',\n            value: credentials.email,\n            onChange: e => setCredentials({ ...credentials,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            type: errors.email && \"invalid\",\n            className: errors.email && 'text-danger',\n            children: (_errors$email = errors.email) !== null && _errors$email !== void 0 ? _errors$email : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Username\",\n            className: errors.username && 'is-invalid',\n            value: credentials.username,\n            onChange: e => setCredentials({ ...credentials,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: errors.username && \"invalid\",\n            children: (_errors$username = errors.username) !== null && _errors$username !== void 0 ? _errors$username : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: errors.password && 'is-invalid',\n            value: credentials.password,\n            onChange: e => setCredentials({ ...credentials,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: errors.password && \"invalid\",\n            children: (_errors$password = errors.password) !== null && _errors$password !== void 0 ? _errors$password : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            className: errors.confirmPassword && 'is-invalid',\n            value: credentials.confirmPassword,\n            onChange: e => setCredentials({ ...credentials,\n              confirmPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: errors.confirmPassword && \"invalid\",\n            children: (_errors$confirmPasswo = errors.confirmPassword) !== null && _errors$confirmPasswo !== void 0 ? _errors$confirmPasswo : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'loading..' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Already have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"i3rQMASj21am8VNLajVM1pLrkAg=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Register.js"],"names":["React","useState","gql","useMutation","Row","Col","Form","Button","InputGroup","Link","REGISTER_USER","Register","props","credentials","setCredentials","username","email","password","confirmPassword","errors","setErrors","registerUser","loading","onError","err","graphQLErrors","extensions","update","history","push","submitRegistrationForm","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport { Row, Col, Form, Button, InputGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n    ){\n      register(\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      ){\n        username\n        email\n        createdAt\n      }\n  }\n`\nexport const Register = (props) => {\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n\n  const [errors, setErrors] = useState({})\n\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\n\n    // Handle error\n    onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\n\n    // Redirect to login page when registered\n    update: () => props.history.push('/login')\n  })\n\n  const submitRegistrationForm = (event) => {\n    event.preventDefault()\n    registerUser({ credentials })\n  }\n\n  return (\n    <Row>\n      <Col>\n        \n        {/* HEADING */}\n        <h1>REGISTER</h1>\n\n        {/* FORM STARTS */}\n        <Form onSubmit={submitRegistrationForm}>\n          \n          <Form.Group className=\"mb-5\">\n            {/* <InputGroup > */}\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email address\"\n                className={errors.email && 'is-invalid'}\n                value={credentials.email}\n                onChange={ (e) => setCredentials({ ...credentials, email: e.target.value }) }\n              />\n            <Form.Text\n              type={errors.email && \"invalid\"}\n              className={errors.email && 'text-danger'}  \n            >\n                { errors.email ?? ''}\n              </Form.Text>\n            {/* </InputGroup>   */}\n          </Form.Group>\n\n          <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                className={errors.username && 'is-invalid'}\n                value={credentials.username}\n                onChange={ (e) => setCredentials({ ...credentials, username: e.target.value }) }\n              />\n            <Form.Control.Feedback type={errors.username && \"invalid\"}>\n              { errors.username ?? '' }\n            </Form.Control.Feedback>          \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                className={errors.password && 'is-invalid'}\n                value={credentials.password}\n                onChange={ (e) => setCredentials({ ...credentials, password: e.target.value }) }\n              />\n            <Form.Control.Feedback type={errors.password && \"invalid\"}>\n              { errors.password ?? '' }\n            </Form.Control.Feedback>          \n          </Form.Group>\n\n          <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                className={errors.confirmPassword && 'is-invalid'}\n                value={credentials.confirmPassword}\n                onChange={ (e) => setCredentials({ ...credentials, confirmPassword: e.target.value }) }\n              />\n            <Form.Control.Feedback type={errors.confirmPassword && \"invalid\"}>\n              { errors.confirmPassword ?? '' }\n            </Form.Control.Feedback>          \n          </Form.Group>\n  \n          <div className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'loading..' : 'Register'}\n            </Button>\n            <br />\n            <small>Already have an account ? <Link to=\"/login\">Login</Link></small>\n          </div>\n          \n        </Form>\n        {/* FORM ENDS */}\n\n      </Col>\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}