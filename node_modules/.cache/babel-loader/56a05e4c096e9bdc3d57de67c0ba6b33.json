{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REGISTER_USER = gql`\n  mutation register($username: String! $email: String! $password: String! $confirmPassword: String!){\n    register(username: $username email: $email password: $password confirmPassword: $confirmPassword){\n      username createdAt\n    }\n  }\n`;\nexport const Register = props => {\n  _s();\n\n  var _errors$email, _errors$username, _errors$password, _errors$confirmPasswo;\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [registerUser, {\n    loading,\n    data,\n    error\n  }] = useMutation(REGISTER_USER, {\n    // Redirect to login page when registered\n    update: () => props.history.push('/login'),\n    // Handle error\n    onError: err => {\n      console.log('errors - seterrors : ', errors);\n      console.log('ERROR : ', error);\n      console.log('DATA : ', data);\n      console.log('onerror: ', err);\n      console.log('object: ', err.networkError.result.errors);\n      console.log('json: ', JSON.stringify(err));\n      setErrors(err.graphQLErrors[0].extensions.errors);\n    }\n  });\n\n  const submitRegistrationForm = event => {\n    event.preventDefault();\n    console.log('credentials: ', credentials);\n    registerUser({\n      credentials\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"bg-white rounded-3 py-5 justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: 8,\n      md: 6,\n      lg: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitRegistrationForm,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.email && 'text-danger',\n            children: (_errors$email = errors.email) !== null && _errors$email !== void 0 ? _errors$email : 'Email address'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: credentials.email,\n            className: errors.email && 'is-invalid',\n            onChange: e => setCredentials({ ...credentials,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.username && 'text-danger',\n            children: (_errors$username = errors.username) !== null && _errors$username !== void 0 ? _errors$username : 'Username'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: credentials.username,\n            className: errors.username && 'is-invalid',\n            onChange: e => setCredentials({ ...credentials,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.password && 'text-danger',\n            children: (_errors$password = errors.password) !== null && _errors$password !== void 0 ? _errors$password : 'Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: credentials.password,\n            className: errors.password && 'is-invalid',\n            onChange: e => setCredentials({ ...credentials,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.confirmPassword && 'text-danger',\n            children: (_errors$confirmPasswo = errors.confirmPassword) !== null && _errors$confirmPasswo !== void 0 ? _errors$confirmPasswo : 'Confirm Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: credentials.confirmPassword,\n            className: errors.confirmPassword && 'is-invalid',\n            onChange: e => setCredentials({ ...credentials,\n              confirmPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'loading..' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Already have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"2qrhPMjwixX90gOebtP8QZhzNeA=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Register.js"],"names":["React","useState","gql","useMutation","Row","Col","Form","Button","Link","REGISTER_USER","Register","props","credentials","setCredentials","username","email","password","confirmPassword","errors","setErrors","registerUser","loading","data","error","update","history","push","onError","err","console","log","networkError","result","JSON","stringify","graphQLErrors","extensions","submitRegistrationForm","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useMutation } from '@apollo/client'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst REGISTER_USER = gql`\n  mutation register($username: String! $email: String! $password: String! $confirmPassword: String!){\n    register(username: $username email: $email password: $password confirmPassword: $confirmPassword){\n      username createdAt\n    }\n  }\n`;\nexport const Register = (props) => {\n\n  const [credentials, setCredentials] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n\n  const [errors, setErrors] = useState({})\n\n  const [registerUser, { loading, data, error }] = useMutation(REGISTER_USER, {\n\n    // Redirect to login page when registered\n    update: () => props.history.push('/login'),\n    // Handle error\n    onError: (err) => {\n      console.log('errors - seterrors : ', errors)\n      console.log('ERROR : ', error)\n      console.log('DATA : ', data)\n      console.log('onerror: ', err)\n      console.log('object: ', err.networkError.result.errors)\n      console.log('json: ', JSON.stringify(err))\n      setErrors(err.graphQLErrors[0].extensions.errors)\n    }\n  })\n\n  const submitRegistrationForm = (event) => {\n    event.preventDefault()\n    console.log('credentials: ', credentials)\n    registerUser({ credentials })\n  }\n\n  return (\n    <Row className=\"bg-white rounded-3 py-5 justify-content-center\">\n      <Col sm={8} md={6} lg={4}>\n        \n        {/* HEADING */}\n        <h1 className=\"text-center\">REGISTER</h1>\n\n        {/* FORM STARTS */}\n        <Form onSubmit={submitRegistrationForm}>\n          \n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.email && 'text-danger'}>\n              {errors.email ?? 'Email address'}\n            </Form.Label>\n            <Form.Control type=\"email\"\n              value={credentials.email} className={errors.email && 'is-invalid'}\n              onChange={e => setCredentials({ ...credentials, email: e.target.value })} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.username && 'text-danger'}>\n              {errors.username ?? 'Username'}\n            </Form.Label>\n            <Form.Control type=\"text\"\n              value={credentials.username} className={errors.username && 'is-invalid'}\n              onChange={e => setCredentials({ ...credentials, username: e.target.value })} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.password && 'text-danger'}>\n              {errors.password ?? 'Password'}\n            </Form.Label>\n            <Form.Control type=\"password\"\n              value={credentials.password} className={errors.password && 'is-invalid'}\n              onChange={e => setCredentials({ ...credentials, password: e.target.value })} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.confirmPassword && 'text-danger'}>\n              {errors.confirmPassword ?? 'Confirm Password'}\n            </Form.Label>\n            <Form.Control type=\"password\"\n              value={credentials.confirmPassword} className={errors.confirmPassword && 'is-invalid'}\n              onChange={e => setCredentials({ ...credentials, confirmPassword: e.target.value })} />\n          </Form.Group>\n  \n          <div className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'loading..' : 'Register'}\n            </Button>\n            <br />\n            <small>Already have an account ? <Link to=\"/login\">Login</Link></small>\n          </div>\n\n        </Form>\n        {/* FORM ENDS */}\n\n      </Col>\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}