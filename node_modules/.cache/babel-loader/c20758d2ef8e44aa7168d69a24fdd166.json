{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { useAuthDispatch, useAuthState } from '../context/auth';\nimport { Row, Col, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_GROUPS = gql`\n  query getGroups{\n    getGroups{\n      groupname groupdesc createdAt\n    }\n  }\n`;\nexport const Home = () => {\n  _s();\n\n  const authDispatch = useAuthDispatch();\n  const {\n    user\n  } = useAuthState();\n  const [groups, setGroups] = useState([]);\n  const [getGroups, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(GET_GROUPS);\n  useEffect(() => {\n    if (error) {\n      console.log('error: ', error);\n    } else if (data) {\n      let g = getGroups();\n      console.log('g ', g);\n      setGroups(g);\n      console.log('groups: ', groups);\n    } else if (loading) {\n      console.log('loading: ', loading);\n    } else {\n      console.log('something fishy');\n      let g = getGroups;\n      console.log('g ', g);\n      setGroups(g);\n      console.log('groups: ', groups);\n    }\n  }, [getGroups]);\n\n  const logout = () => {\n    authDispatch({\n      type: 'LOGOUT'\n    });\n    window.location.href = '/login';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"bg-white justify-content-end text-center mb-1\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"text-decoration-none\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: groups.map(group => {\n        /*#__PURE__*/\n        _jsxDEV(Col, {\n          sm: 6,\n          md: 4,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: group.groupname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: group.groupdesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Go somewhere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"text-muted\",\n              children: group.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"9BjuaqGN1F6g+ve9IdOMdYph06I=\", false, function () {\n  return [useAuthDispatch, useAuthState, useLazyQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Home.js"],"names":["React","Fragment","useState","useEffect","gql","useLazyQuery","useAuthDispatch","useAuthState","Row","Col","Button","Card","GET_GROUPS","Home","authDispatch","user","groups","setGroups","getGroups","loading","data","error","console","log","g","logout","type","window","location","href","map","group","groupname","groupdesc","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,iBAA9C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,IAA3B,QAAuC,iBAAvC;;AAEA,MAAMC,UAAU,GAAGR,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,OAAO,MAAMS,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWR,YAAY,EAA7B;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACgB,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAZ,IAAwChB,YAAY,CAACO,UAAD,CAA1D;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,KAFD,MAGK,IAAID,IAAJ,EAAU;AACb,UAAII,CAAC,GAAGN,SAAS,EAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBC,CAAlB;AACAP,MAAAA,SAAS,CAACO,CAAD,CAAT;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;AACD,KALI,MAMA,IAAIG,OAAJ,EAAa;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACD,KAFI,MAGA;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAIC,CAAC,GAAGN,SAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBC,CAAlB;AACAP,MAAAA,SAAS,CAACO,CAAD,CAAT;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;AACD;AACF,GApBQ,EAoBN,CAACE,SAAD,CApBM,CAAT;;AAsBA,QAAMO,MAAM,GAAG,MAAM;AACnBX,IAAAA,YAAY,CAAC;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,SAAS,EAAC,sBAAjC;AAAwD,UAAA,OAAO,EAAEJ,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,GAAD;AAAA,gBACGT,MAAM,CAACc,GAAP,CAAWC,KAAK,IAAI;AACnB;AAAA,gBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,oCAEE,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA,0BAAcA,KAAK,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,0BAAaD,KAAK,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,YAAvB;AAAA,wBAAsCF,KAAK,CAACG;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3DM;;GAAMrB,I;UACUP,e,EACJC,Y,EAG6BF,Y;;;KALnCQ,I","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { useAuthDispatch, useAuthState } from '../context/auth'\nimport { Row, Col, Button, Card } from 'react-bootstrap'\n\nconst GET_GROUPS = gql`\n  query getGroups{\n    getGroups{\n      groupname groupdesc createdAt\n    }\n  }\n`\nexport const Home = () => {\n  const authDispatch = useAuthDispatch()\n  const { user } = useAuthState()\n  const [groups, setGroups] = useState([])\n\n  const [getGroups, { loading, data, error }] = useLazyQuery(GET_GROUPS)\n\n  useEffect(() => {\n    if (error) {\n      console.log('error: ', error)\n    }\n    else if (data) {\n      let g = getGroups()\n      console.log('g ', g)\n      setGroups(g)\n      console.log('groups: ', groups)\n    }\n    else if (loading) {\n      console.log('loading: ', loading)\n    }\n    else {\n      console.log('something fishy')\n      let g = getGroups\n      console.log('g ', g)\n      setGroups(g)\n      console.log('groups: ', groups)\n    }\n  }, [getGroups])\n\n  const logout = () => {\n    authDispatch({ type: 'LOGOUT' })\n    window.location.href = '/login'\n  }\n\n  return (\n    <Fragment>\n      <Row className=\"bg-white justify-content-end text-center mb-1\">\n        <Col sm={2}>\n            <Button variant=\"link\" className=\"text-decoration-none\" onClick={logout}>Logout</Button>\n        </Col>\n      </Row>\n\n      <Row>\n        {groups.map(group => {\n          <Col sm={6} md={4} lg={2}>\n            <Card className=\"text-center\">\n              {/* <Card.Header>Featured</Card.Header> */}\n              <Card.Body>\n                <Card.Title>{ group.groupname }</Card.Title>\n                <Card.Text>{ group.groupdesc }</Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">{ group.createdAt }</Card.Footer>\n            </Card>\n          </Col>\n        })}\n      </Row>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}