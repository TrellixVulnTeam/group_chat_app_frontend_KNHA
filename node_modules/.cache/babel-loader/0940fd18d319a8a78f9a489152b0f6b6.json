{"ast":null,"code":"var _jsxFileName = \"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { useAuthDispatch } from '../context/auth';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_USER = gql`\n  query login($username: String! $password: String!) {\n    login(username: $username password: $password) {\n      username\n      token\n      createdAt\n    }\n  }\n`;\nexport const Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const [variables, setVariables] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const authDispatch = useAuthDispatch();\n  const [loginUser, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(LOGIN_USER, {\n    onError: err => setErrors(err.graphQLErrors[0].extensions.errors),\n    onCompleted: data => {\n      // we are now setting data in context auth\n      authDispatch({\n        type: 'LOGIN',\n        payload: data.login\n      });\n      window.location.href = '/';\n    }\n  });\n\n  const submitLoginForm = event => {\n    event.preventDefault();\n    console.log('Variables: ', variables);\n    loginUser({\n      variables\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"bg-white rounded-3 py-5 justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: 8,\n      md: 6,\n      lg: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitLoginForm,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.username && 'text-danger',\n            children: (_errors$username = errors.username) !== null && _errors$username !== void 0 ? _errors$username : 'Username'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter user name\",\n            value: variables.username,\n            className: errors.username && 'is-invalid',\n            onChange: e => setVariables({ ...variables,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: errors.password && 'text-danger',\n            children: (_errors$password = errors.password) !== null && _errors$password !== void 0 ? _errors$password : 'Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: variables.password,\n            className: errors.password && 'is-invalid',\n            onChange: e => setVariables({ ...variables,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'loading..' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Register here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"+vlQn2Jnxfa1aVq8SnDsF61uTag=\", false, function () {\n  return [useAuthDispatch, useLazyQuery];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Login.js"],"names":["React","useState","gql","useLazyQuery","useAuthDispatch","Row","Col","Form","Button","Link","LOGIN_USER","Login","variables","setVariables","username","password","errors","setErrors","authDispatch","loginUser","loading","data","error","onError","err","graphQLErrors","extensions","onCompleted","type","payload","login","window","location","href","submitLoginForm","event","preventDefault","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { useAuthDispatch } from '../context/auth'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst LOGIN_USER = gql`\n  query login($username: String! $password: String!) {\n    login(username: $username password: $password) {\n      username\n      token\n      createdAt\n    }\n  }\n`\nexport const Login = () => {\n  const [variables, setVariables] = useState({\n    username: '',\n    password: '',\n  })\n  const [errors, setErrors] = useState({})\n\n  const authDispatch = useAuthDispatch()\n\n  const [loginUser, { loading, data, error }] = useLazyQuery(LOGIN_USER, {\n    onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\n    onCompleted: (data) => {\n      // we are now setting data in context auth\n      authDispatch({ type: 'LOGIN', payload: data.login })\n      window.location.href = '/'\n    }\n  })\n\n  const submitLoginForm = (event) => {\n    event.preventDefault()\n    console.log('Variables: ', variables)\n    loginUser({ variables })\n  }\n  return (\n    <Row className=\"bg-white rounded-3 py-5 justify-content-center\">\n      <Col sm={8} md={6} lg={4}>\n        <h1 className=\"text-center\">Login</h1>\n        <Form onSubmit={submitLoginForm}>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.username && 'text-danger'}>\n              {errors.username ?? 'Username'}\n            </Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter user name\"\n              value={variables.username} className={errors.username && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, username: e.target.value })} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.password && 'text-danger'}>\n              {errors.password ?? 'Password'}\n            </Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Enter password\"\n              value={variables.password} className={errors.password && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, password: e.target.value })} />\n          </Form.Group>\n\n          <div className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'loading..' : 'Login'}\n            </Button>\n            <br />\n            <small>Don't have an account ? <Link to=\"/register\">Register here</Link></small>\n          </div>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}