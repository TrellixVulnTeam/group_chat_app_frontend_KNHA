{"ast":null,"code":"import _objectSpread from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import{gql,useLazyQuery}from'@apollo/client';import{useAuthDispatch}from'../context/auth';import{Row,Col,Form,Button}from'react-bootstrap';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LOGIN_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query login($username: String! $password: String!) {\\n    login(username: $username password: $password) {\\n      username\\n      token\\n      createdAt\\n    }\\n  }\\n\"])));export var Login=function Login(){var _errors$username,_errors$password;var _useState=useState({username:'',password:''}),_useState2=_slicedToArray(_useState,2),variables=_useState2[0],setVariables=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var authDispatch=useAuthDispatch();var _useLazyQuery=useLazyQuery(LOGIN_USER,{onError:function onError(err){return setErrors(err.graphQLErrors[0].extensions.errors);},onCompleted:function onCompleted(data){// we are now setting data in context auth\nauthDispatch({type:'LOGIN',payload:data.login});window.location.href='/';}}),_useLazyQuery2=_slicedToArray(_useLazyQuery,2),loginUser=_useLazyQuery2[0],_useLazyQuery2$=_useLazyQuery2[1],loading=_useLazyQuery2$.loading,data=_useLazyQuery2$.data,error=_useLazyQuery2$.error;var submitLoginForm=function submitLoginForm(event){event.preventDefault();console.log('Variables: ',variables);loginUser({variables:variables});};return/*#__PURE__*/_jsx(Row,{className:\"bg-white rounded-3 py-5 justify-content-center\",children:/*#__PURE__*/_jsxs(Col,{sm:8,md:6,lg:4,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Login\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitLoginForm,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:errors.username&&'text-danger',children:(_errors$username=errors.username)!==null&&_errors$username!==void 0?_errors$username:'Username'}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter user name\",value:variables.username,className:errors.username&&'is-invalid',onChange:function onChange(e){return setVariables(_objectSpread(_objectSpread({},variables),{},{username:e.target.value}));}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:errors.password&&'text-danger',children:(_errors$password=errors.password)!==null&&_errors$password!==void 0?_errors$password:'Password'}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:variables.password,className:errors.password&&'is-invalid',onChange:function onChange(e){return setVariables(_objectSpread(_objectSpread({},variables),{},{password:e.target.value}));}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",type:\"submit\",disabled:loading,children:loading?'loading..':'Login'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Don't have an account ? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register here\"})]})]})]})]})});};","map":{"version":3,"sources":["/Users/divyanshisaxena/Desktop/divyanshi/learning/gql/group-chat-app/client/src/pages/Login.js"],"names":["React","useState","gql","useLazyQuery","useAuthDispatch","Row","Col","Form","Button","Link","LOGIN_USER","Login","username","password","variables","setVariables","errors","setErrors","authDispatch","onError","err","graphQLErrors","extensions","onCompleted","data","type","payload","login","window","location","href","loginUser","loading","error","submitLoginForm","event","preventDefault","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { useAuthDispatch } from '../context/auth'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst LOGIN_USER = gql`\n  query login($username: String! $password: String!) {\n    login(username: $username password: $password) {\n      username\n      token\n      createdAt\n    }\n  }\n`\nexport const Login = () => {\n  const [variables, setVariables] = useState({\n    username: '',\n    password: '',\n  })\n  const [errors, setErrors] = useState({})\n\n  const authDispatch = useAuthDispatch()\n\n  const [loginUser, { loading, data, error }] = useLazyQuery(LOGIN_USER, {\n    onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\n    onCompleted: (data) => {\n      // we are now setting data in context auth\n      authDispatch({ type: 'LOGIN', payload: data.login })\n      window.location.href = '/'\n    }\n  })\n\n  const submitLoginForm = (event) => {\n    event.preventDefault()\n    console.log('Variables: ', variables)\n    loginUser({ variables })\n  }\n  return (\n    <Row className=\"bg-white rounded-3 py-5 justify-content-center\">\n      <Col sm={8} md={6} lg={4}>\n        <h1 className=\"text-center\">Login</h1>\n        <Form onSubmit={submitLoginForm}>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.username && 'text-danger'}>\n              {errors.username ?? 'Username'}\n            </Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter user name\"\n              value={variables.username} className={errors.username && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, username: e.target.value })} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label className={errors.password && 'text-danger'}>\n              {errors.password ?? 'Password'}\n            </Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Enter password\"\n              value={variables.password} className={errors.password && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, password: e.target.value })} />\n          </Form.Group>\n\n          <div className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'loading..' : 'Login'}\n            </Button>\n            <br />\n            <small>Don't have an account ? <Link to=\"/register\">Register here</Link></small>\n          </div>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}